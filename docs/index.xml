<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>简介 on 技术学习笔记</title>
    <link>http://example.org/</link>
    <description>Recent content in 简介 on 技术学习笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Sep 2021 00:44:56 +0800</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Life</title>
      <link>http://example.org/blog/life/</link>
      <pubDate>Wed, 08 Sep 2021 18:37:17 +0800</pubDate>
      
      <guid>http://example.org/blog/life/</guid>
      <description>关于 Hugo GeekDoc     GitHub 先新建一个仓库，并配置 Github Pages。 下载 geekdoc 的 release，放到 theme 文件夹下。 配置config.toml baseURL = &amp;#39;http://example.org/&amp;#39; languageCode = &amp;#39;en-us&amp;#39; title = &amp;#39;技术学习笔记&amp;#39; theme = &amp;#34;hugo-geekdoc&amp;#34; # Match the github rule. publishdir = &amp;#34;./docs/&amp;#34; pluralizeListTitles = false # Geekdoc required configuration pygmentsUseClasses = true pygmentsCodeFences = true disablePathToLower = true # Needed for mermaid shortcodes [markup] [markup.goldmark.renderer] # Needed for mermaid shortcode unsafe = true [markup.tableOfContents] startLevel = 1 endLevel = 9 [taxonomies] tag = &amp;#34;tags&amp;#34;  开始写文章 hugo new blog/life.</description>
    </item>
    
    <item>
      <title>Start()与run()的区别</title>
      <link>http://example.org/1.%E7%BA%BF%E7%A8%8B%E6%96%B0%E5%BB%BA/start%E4%B8%8Erun%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Wed, 08 Sep 2021 18:01:52 +0800</pubDate>
      
      <guid>http://example.org/1.%E7%BA%BF%E7%A8%8B%E6%96%B0%E5%BB%BA/start%E4%B8%8Erun%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>  调用 start() 是通知线程规划器，目标线程已经准备好了，线程规划器可以安排一个时间来启动目标线程，属于异步执行。
  调用 run() 时，是直接执行对应的目标线程的代码段，执行完 run() 中的代码才会继续下一步，属于同步执行。
  </description>
    </item>
    
    <item>
      <title>Runnable方式</title>
      <link>http://example.org/1.%E7%BA%BF%E7%A8%8B%E6%96%B0%E5%BB%BA/runnable%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Wed, 08 Sep 2021 17:54:12 +0800</pubDate>
      
      <guid>http://example.org/1.%E7%BA%BF%E7%A8%8B%E6%96%B0%E5%BB%BA/runnable%E6%96%B9%E5%BC%8F/</guid>
      <description>因为 Runnable 接口中只有 run 方法，无法启动一个新的线程。所以借由 Thread 的构造，从而可以新建线程。
Runnable.java
package threadTest; public class MyRunnable implements Runnable{ @Override public void run(){ System.out.println(&amp;#34;Runnable&amp;#34;); } } Run.java
package threadTest; public class Run { public static void main(String[] args) { Runnable runnable = new MyRunnable(); Thread thread = new Thread(runnable); //runnable has no &amp;#39;start&amp;#39; method, so use thread to decorate(compact).  thread.start(); System.out.println(&amp;#34;done&amp;#34;); } } </description>
    </item>
    
    <item>
      <title>Thread方式</title>
      <link>http://example.org/1.%E7%BA%BF%E7%A8%8B%E6%96%B0%E5%BB%BA/thread%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Wed, 08 Sep 2021 17:43:04 +0800</pubDate>
      
      <guid>http://example.org/1.%E7%BA%BF%E7%A8%8B%E6%96%B0%E5%BB%BA/thread%E6%96%B9%E5%BC%8F/</guid>
      <description>Mythread.java
package threadTest; public class MyThread extends Thread{ @Override public void run(){ super.run(); for (int i = 0; i &amp;lt; 100; i++){ System.out.println(&amp;#34;MyThread:&amp;#34; + i); } } } Main.java
package threadTest; public class main { public static void main(String[] args){ MyThread myThread = new MyThread(); myThread.start(); MyThread myThread1 = new MyThread(); myThread1.start(); System.out.println(&amp;#34;Has been ran&amp;#34;); } } </description>
    </item>
    
  </channel>
</rss>
